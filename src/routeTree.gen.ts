/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LayoutImport } from './routes/_layout'
import { Route as LayoutIndexImport } from './routes/_layout/index'
import { Route as AuthSignInImport } from './routes/auth/sign-in'
import { Route as AuthGoogleVerifyImport } from './routes/auth/google-verify'
import { Route as AuthGithubVerifyImport } from './routes/auth/github-verify'
import { Route as AuthEmailVerifyImport } from './routes/auth/email-verify'
import { Route as LayoutProjectsIndexImport } from './routes/_layout/projects/index'
import { Route as LayoutAccountLayoutImport } from './routes/_layout/account/_layout'
import { Route as LayoutAccountLayoutIndexImport } from './routes/_layout/account/_layout/index'
import { Route as LayoutProjectsProjectLayoutImport } from './routes/_layout/projects/$project/_layout'
import { Route as LayoutAccountLayoutNotificationsImport } from './routes/_layout/account/_layout/notifications'
import { Route as LayoutAccountLayoutBillingImport } from './routes/_layout/account/_layout/billing'
import { Route as LayoutProjectsProjectLayoutIndexImport } from './routes/_layout/projects/$project/_layout/index'
import { Route as LayoutProjectsProjectLayoutUsersImport } from './routes/_layout/projects/$project/_layout/users'
import { Route as LayoutProjectsProjectLayoutTeamImport } from './routes/_layout/projects/$project/_layout/team'
import { Route as LayoutProjectsProjectLayoutMetricsImport } from './routes/_layout/projects/$project/_layout/metrics'
import { Route as LayoutProjectsProjectLayoutEventsImport } from './routes/_layout/projects/$project/_layout/events'
import { Route as LayoutProjectsProjectLayoutAnalyzeImport } from './routes/_layout/projects/$project/_layout/analyze'
import { Route as LayoutProjectsProjectLayoutAdCampaignsImport } from './routes/_layout/projects/$project/_layout/ad-campaigns'
import { Route as LayoutProjectsProjectLayoutSettingsLayoutImport } from './routes/_layout/projects/$project/_layout/settings/_layout'
import { Route as LayoutProjectsProjectLayoutSettingsLayoutIndexImport } from './routes/_layout/projects/$project/_layout/settings/_layout/index'
import { Route as LayoutProjectsProjectLayoutSettingsLayoutIntegrationsImport } from './routes/_layout/projects/$project/_layout/settings/_layout/integrations'

// Create Virtual Routes

const LayoutAccountImport = createFileRoute('/_layout/account')()
const LayoutProjectsProjectImport = createFileRoute(
  '/_layout/projects/$project',
)()
const LayoutProjectsProjectLayoutSettingsImport = createFileRoute(
  '/_layout/projects/$project/_layout/settings',
)()

// Create/Update Routes

const LayoutRoute = LayoutImport.update({
  id: '/_layout',
  getParentRoute: () => rootRoute,
} as any)

const LayoutAccountRoute = LayoutAccountImport.update({
  id: '/account',
  path: '/account',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutIndexRoute = LayoutIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LayoutRoute,
} as any)

const AuthSignInRoute = AuthSignInImport.update({
  id: '/auth/sign-in',
  path: '/auth/sign-in',
  getParentRoute: () => rootRoute,
} as any)

const AuthGoogleVerifyRoute = AuthGoogleVerifyImport.update({
  id: '/auth/google-verify',
  path: '/auth/google-verify',
  getParentRoute: () => rootRoute,
} as any)

const AuthGithubVerifyRoute = AuthGithubVerifyImport.update({
  id: '/auth/github-verify',
  path: '/auth/github-verify',
  getParentRoute: () => rootRoute,
} as any)

const AuthEmailVerifyRoute = AuthEmailVerifyImport.update({
  id: '/auth/email-verify',
  path: '/auth/email-verify',
  getParentRoute: () => rootRoute,
} as any)

const LayoutProjectsProjectRoute = LayoutProjectsProjectImport.update({
  id: '/projects/$project',
  path: '/projects/$project',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutProjectsIndexRoute = LayoutProjectsIndexImport.update({
  id: '/projects/',
  path: '/projects/',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutAccountLayoutRoute = LayoutAccountLayoutImport.update({
  id: '/_layout',
  getParentRoute: () => LayoutAccountRoute,
} as any)

const LayoutAccountLayoutIndexRoute = LayoutAccountLayoutIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LayoutAccountLayoutRoute,
} as any)

const LayoutProjectsProjectLayoutRoute =
  LayoutProjectsProjectLayoutImport.update({
    id: '/_layout',
    getParentRoute: () => LayoutProjectsProjectRoute,
  } as any)

const LayoutAccountLayoutNotificationsRoute =
  LayoutAccountLayoutNotificationsImport.update({
    id: '/notifications',
    path: '/notifications',
    getParentRoute: () => LayoutAccountLayoutRoute,
  } as any)

const LayoutAccountLayoutBillingRoute = LayoutAccountLayoutBillingImport.update(
  {
    id: '/billing',
    path: '/billing',
    getParentRoute: () => LayoutAccountLayoutRoute,
  } as any,
)

const LayoutProjectsProjectLayoutSettingsRoute =
  LayoutProjectsProjectLayoutSettingsImport.update({
    id: '/settings',
    path: '/settings',
    getParentRoute: () => LayoutProjectsProjectLayoutRoute,
  } as any)

const LayoutProjectsProjectLayoutIndexRoute =
  LayoutProjectsProjectLayoutIndexImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => LayoutProjectsProjectLayoutRoute,
  } as any)

const LayoutProjectsProjectLayoutUsersRoute =
  LayoutProjectsProjectLayoutUsersImport.update({
    id: '/users',
    path: '/users',
    getParentRoute: () => LayoutProjectsProjectLayoutRoute,
  } as any)

const LayoutProjectsProjectLayoutTeamRoute =
  LayoutProjectsProjectLayoutTeamImport.update({
    id: '/team',
    path: '/team',
    getParentRoute: () => LayoutProjectsProjectLayoutRoute,
  } as any)

const LayoutProjectsProjectLayoutMetricsRoute =
  LayoutProjectsProjectLayoutMetricsImport.update({
    id: '/metrics',
    path: '/metrics',
    getParentRoute: () => LayoutProjectsProjectLayoutRoute,
  } as any)

const LayoutProjectsProjectLayoutEventsRoute =
  LayoutProjectsProjectLayoutEventsImport.update({
    id: '/events',
    path: '/events',
    getParentRoute: () => LayoutProjectsProjectLayoutRoute,
  } as any)

const LayoutProjectsProjectLayoutAnalyzeRoute =
  LayoutProjectsProjectLayoutAnalyzeImport.update({
    id: '/analyze',
    path: '/analyze',
    getParentRoute: () => LayoutProjectsProjectLayoutRoute,
  } as any)

const LayoutProjectsProjectLayoutAdCampaignsRoute =
  LayoutProjectsProjectLayoutAdCampaignsImport.update({
    id: '/ad-campaigns',
    path: '/ad-campaigns',
    getParentRoute: () => LayoutProjectsProjectLayoutRoute,
  } as any)

const LayoutProjectsProjectLayoutSettingsLayoutRoute =
  LayoutProjectsProjectLayoutSettingsLayoutImport.update({
    id: '/_layout',
    getParentRoute: () => LayoutProjectsProjectLayoutSettingsRoute,
  } as any)

const LayoutProjectsProjectLayoutSettingsLayoutIndexRoute =
  LayoutProjectsProjectLayoutSettingsLayoutIndexImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => LayoutProjectsProjectLayoutSettingsLayoutRoute,
  } as any)

const LayoutProjectsProjectLayoutSettingsLayoutIntegrationsRoute =
  LayoutProjectsProjectLayoutSettingsLayoutIntegrationsImport.update({
    id: '/integrations',
    path: '/integrations',
    getParentRoute: () => LayoutProjectsProjectLayoutSettingsLayoutRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_layout': {
      id: '/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutImport
      parentRoute: typeof rootRoute
    }
    '/auth/email-verify': {
      id: '/auth/email-verify'
      path: '/auth/email-verify'
      fullPath: '/auth/email-verify'
      preLoaderRoute: typeof AuthEmailVerifyImport
      parentRoute: typeof rootRoute
    }
    '/auth/github-verify': {
      id: '/auth/github-verify'
      path: '/auth/github-verify'
      fullPath: '/auth/github-verify'
      preLoaderRoute: typeof AuthGithubVerifyImport
      parentRoute: typeof rootRoute
    }
    '/auth/google-verify': {
      id: '/auth/google-verify'
      path: '/auth/google-verify'
      fullPath: '/auth/google-verify'
      preLoaderRoute: typeof AuthGoogleVerifyImport
      parentRoute: typeof rootRoute
    }
    '/auth/sign-in': {
      id: '/auth/sign-in'
      path: '/auth/sign-in'
      fullPath: '/auth/sign-in'
      preLoaderRoute: typeof AuthSignInImport
      parentRoute: typeof rootRoute
    }
    '/_layout/': {
      id: '/_layout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof LayoutIndexImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/account': {
      id: '/_layout/account'
      path: '/account'
      fullPath: '/account'
      preLoaderRoute: typeof LayoutAccountImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/account/_layout': {
      id: '/_layout/account/_layout'
      path: '/account'
      fullPath: '/account'
      preLoaderRoute: typeof LayoutAccountLayoutImport
      parentRoute: typeof LayoutAccountRoute
    }
    '/_layout/projects/': {
      id: '/_layout/projects/'
      path: '/projects'
      fullPath: '/projects'
      preLoaderRoute: typeof LayoutProjectsIndexImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/account/_layout/billing': {
      id: '/_layout/account/_layout/billing'
      path: '/billing'
      fullPath: '/account/billing'
      preLoaderRoute: typeof LayoutAccountLayoutBillingImport
      parentRoute: typeof LayoutAccountLayoutImport
    }
    '/_layout/account/_layout/notifications': {
      id: '/_layout/account/_layout/notifications'
      path: '/notifications'
      fullPath: '/account/notifications'
      preLoaderRoute: typeof LayoutAccountLayoutNotificationsImport
      parentRoute: typeof LayoutAccountLayoutImport
    }
    '/_layout/projects/$project': {
      id: '/_layout/projects/$project'
      path: '/projects/$project'
      fullPath: '/projects/$project'
      preLoaderRoute: typeof LayoutProjectsProjectImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/projects/$project/_layout': {
      id: '/_layout/projects/$project/_layout'
      path: '/projects/$project'
      fullPath: '/projects/$project'
      preLoaderRoute: typeof LayoutProjectsProjectLayoutImport
      parentRoute: typeof LayoutProjectsProjectRoute
    }
    '/_layout/account/_layout/': {
      id: '/_layout/account/_layout/'
      path: '/'
      fullPath: '/account/'
      preLoaderRoute: typeof LayoutAccountLayoutIndexImport
      parentRoute: typeof LayoutAccountLayoutImport
    }
    '/_layout/projects/$project/_layout/ad-campaigns': {
      id: '/_layout/projects/$project/_layout/ad-campaigns'
      path: '/ad-campaigns'
      fullPath: '/projects/$project/ad-campaigns'
      preLoaderRoute: typeof LayoutProjectsProjectLayoutAdCampaignsImport
      parentRoute: typeof LayoutProjectsProjectLayoutImport
    }
    '/_layout/projects/$project/_layout/analyze': {
      id: '/_layout/projects/$project/_layout/analyze'
      path: '/analyze'
      fullPath: '/projects/$project/analyze'
      preLoaderRoute: typeof LayoutProjectsProjectLayoutAnalyzeImport
      parentRoute: typeof LayoutProjectsProjectLayoutImport
    }
    '/_layout/projects/$project/_layout/events': {
      id: '/_layout/projects/$project/_layout/events'
      path: '/events'
      fullPath: '/projects/$project/events'
      preLoaderRoute: typeof LayoutProjectsProjectLayoutEventsImport
      parentRoute: typeof LayoutProjectsProjectLayoutImport
    }
    '/_layout/projects/$project/_layout/metrics': {
      id: '/_layout/projects/$project/_layout/metrics'
      path: '/metrics'
      fullPath: '/projects/$project/metrics'
      preLoaderRoute: typeof LayoutProjectsProjectLayoutMetricsImport
      parentRoute: typeof LayoutProjectsProjectLayoutImport
    }
    '/_layout/projects/$project/_layout/team': {
      id: '/_layout/projects/$project/_layout/team'
      path: '/team'
      fullPath: '/projects/$project/team'
      preLoaderRoute: typeof LayoutProjectsProjectLayoutTeamImport
      parentRoute: typeof LayoutProjectsProjectLayoutImport
    }
    '/_layout/projects/$project/_layout/users': {
      id: '/_layout/projects/$project/_layout/users'
      path: '/users'
      fullPath: '/projects/$project/users'
      preLoaderRoute: typeof LayoutProjectsProjectLayoutUsersImport
      parentRoute: typeof LayoutProjectsProjectLayoutImport
    }
    '/_layout/projects/$project/_layout/': {
      id: '/_layout/projects/$project/_layout/'
      path: '/'
      fullPath: '/projects/$project/'
      preLoaderRoute: typeof LayoutProjectsProjectLayoutIndexImport
      parentRoute: typeof LayoutProjectsProjectLayoutImport
    }
    '/_layout/projects/$project/_layout/settings': {
      id: '/_layout/projects/$project/_layout/settings'
      path: '/settings'
      fullPath: '/projects/$project/settings'
      preLoaderRoute: typeof LayoutProjectsProjectLayoutSettingsImport
      parentRoute: typeof LayoutProjectsProjectLayoutImport
    }
    '/_layout/projects/$project/_layout/settings/_layout': {
      id: '/_layout/projects/$project/_layout/settings/_layout'
      path: '/settings'
      fullPath: '/projects/$project/settings'
      preLoaderRoute: typeof LayoutProjectsProjectLayoutSettingsLayoutImport
      parentRoute: typeof LayoutProjectsProjectLayoutSettingsRoute
    }
    '/_layout/projects/$project/_layout/settings/_layout/integrations': {
      id: '/_layout/projects/$project/_layout/settings/_layout/integrations'
      path: '/integrations'
      fullPath: '/projects/$project/settings/integrations'
      preLoaderRoute: typeof LayoutProjectsProjectLayoutSettingsLayoutIntegrationsImport
      parentRoute: typeof LayoutProjectsProjectLayoutSettingsLayoutImport
    }
    '/_layout/projects/$project/_layout/settings/_layout/': {
      id: '/_layout/projects/$project/_layout/settings/_layout/'
      path: '/'
      fullPath: '/projects/$project/settings/'
      preLoaderRoute: typeof LayoutProjectsProjectLayoutSettingsLayoutIndexImport
      parentRoute: typeof LayoutProjectsProjectLayoutSettingsLayoutImport
    }
  }
}

// Create and export the route tree

interface LayoutAccountLayoutRouteChildren {
  LayoutAccountLayoutBillingRoute: typeof LayoutAccountLayoutBillingRoute
  LayoutAccountLayoutNotificationsRoute: typeof LayoutAccountLayoutNotificationsRoute
  LayoutAccountLayoutIndexRoute: typeof LayoutAccountLayoutIndexRoute
}

const LayoutAccountLayoutRouteChildren: LayoutAccountLayoutRouteChildren = {
  LayoutAccountLayoutBillingRoute: LayoutAccountLayoutBillingRoute,
  LayoutAccountLayoutNotificationsRoute: LayoutAccountLayoutNotificationsRoute,
  LayoutAccountLayoutIndexRoute: LayoutAccountLayoutIndexRoute,
}

const LayoutAccountLayoutRouteWithChildren =
  LayoutAccountLayoutRoute._addFileChildren(LayoutAccountLayoutRouteChildren)

interface LayoutAccountRouteChildren {
  LayoutAccountLayoutRoute: typeof LayoutAccountLayoutRouteWithChildren
}

const LayoutAccountRouteChildren: LayoutAccountRouteChildren = {
  LayoutAccountLayoutRoute: LayoutAccountLayoutRouteWithChildren,
}

const LayoutAccountRouteWithChildren = LayoutAccountRoute._addFileChildren(
  LayoutAccountRouteChildren,
)

interface LayoutProjectsProjectLayoutSettingsLayoutRouteChildren {
  LayoutProjectsProjectLayoutSettingsLayoutIntegrationsRoute: typeof LayoutProjectsProjectLayoutSettingsLayoutIntegrationsRoute
  LayoutProjectsProjectLayoutSettingsLayoutIndexRoute: typeof LayoutProjectsProjectLayoutSettingsLayoutIndexRoute
}

const LayoutProjectsProjectLayoutSettingsLayoutRouteChildren: LayoutProjectsProjectLayoutSettingsLayoutRouteChildren =
  {
    LayoutProjectsProjectLayoutSettingsLayoutIntegrationsRoute:
      LayoutProjectsProjectLayoutSettingsLayoutIntegrationsRoute,
    LayoutProjectsProjectLayoutSettingsLayoutIndexRoute:
      LayoutProjectsProjectLayoutSettingsLayoutIndexRoute,
  }

const LayoutProjectsProjectLayoutSettingsLayoutRouteWithChildren =
  LayoutProjectsProjectLayoutSettingsLayoutRoute._addFileChildren(
    LayoutProjectsProjectLayoutSettingsLayoutRouteChildren,
  )

interface LayoutProjectsProjectLayoutSettingsRouteChildren {
  LayoutProjectsProjectLayoutSettingsLayoutRoute: typeof LayoutProjectsProjectLayoutSettingsLayoutRouteWithChildren
}

const LayoutProjectsProjectLayoutSettingsRouteChildren: LayoutProjectsProjectLayoutSettingsRouteChildren =
  {
    LayoutProjectsProjectLayoutSettingsLayoutRoute:
      LayoutProjectsProjectLayoutSettingsLayoutRouteWithChildren,
  }

const LayoutProjectsProjectLayoutSettingsRouteWithChildren =
  LayoutProjectsProjectLayoutSettingsRoute._addFileChildren(
    LayoutProjectsProjectLayoutSettingsRouteChildren,
  )

interface LayoutProjectsProjectLayoutRouteChildren {
  LayoutProjectsProjectLayoutAdCampaignsRoute: typeof LayoutProjectsProjectLayoutAdCampaignsRoute
  LayoutProjectsProjectLayoutAnalyzeRoute: typeof LayoutProjectsProjectLayoutAnalyzeRoute
  LayoutProjectsProjectLayoutEventsRoute: typeof LayoutProjectsProjectLayoutEventsRoute
  LayoutProjectsProjectLayoutMetricsRoute: typeof LayoutProjectsProjectLayoutMetricsRoute
  LayoutProjectsProjectLayoutTeamRoute: typeof LayoutProjectsProjectLayoutTeamRoute
  LayoutProjectsProjectLayoutUsersRoute: typeof LayoutProjectsProjectLayoutUsersRoute
  LayoutProjectsProjectLayoutIndexRoute: typeof LayoutProjectsProjectLayoutIndexRoute
  LayoutProjectsProjectLayoutSettingsRoute: typeof LayoutProjectsProjectLayoutSettingsRouteWithChildren
}

const LayoutProjectsProjectLayoutRouteChildren: LayoutProjectsProjectLayoutRouteChildren =
  {
    LayoutProjectsProjectLayoutAdCampaignsRoute:
      LayoutProjectsProjectLayoutAdCampaignsRoute,
    LayoutProjectsProjectLayoutAnalyzeRoute:
      LayoutProjectsProjectLayoutAnalyzeRoute,
    LayoutProjectsProjectLayoutEventsRoute:
      LayoutProjectsProjectLayoutEventsRoute,
    LayoutProjectsProjectLayoutMetricsRoute:
      LayoutProjectsProjectLayoutMetricsRoute,
    LayoutProjectsProjectLayoutTeamRoute: LayoutProjectsProjectLayoutTeamRoute,
    LayoutProjectsProjectLayoutUsersRoute:
      LayoutProjectsProjectLayoutUsersRoute,
    LayoutProjectsProjectLayoutIndexRoute:
      LayoutProjectsProjectLayoutIndexRoute,
    LayoutProjectsProjectLayoutSettingsRoute:
      LayoutProjectsProjectLayoutSettingsRouteWithChildren,
  }

const LayoutProjectsProjectLayoutRouteWithChildren =
  LayoutProjectsProjectLayoutRoute._addFileChildren(
    LayoutProjectsProjectLayoutRouteChildren,
  )

interface LayoutProjectsProjectRouteChildren {
  LayoutProjectsProjectLayoutRoute: typeof LayoutProjectsProjectLayoutRouteWithChildren
}

const LayoutProjectsProjectRouteChildren: LayoutProjectsProjectRouteChildren = {
  LayoutProjectsProjectLayoutRoute:
    LayoutProjectsProjectLayoutRouteWithChildren,
}

const LayoutProjectsProjectRouteWithChildren =
  LayoutProjectsProjectRoute._addFileChildren(
    LayoutProjectsProjectRouteChildren,
  )

interface LayoutRouteChildren {
  LayoutIndexRoute: typeof LayoutIndexRoute
  LayoutAccountRoute: typeof LayoutAccountRouteWithChildren
  LayoutProjectsIndexRoute: typeof LayoutProjectsIndexRoute
  LayoutProjectsProjectRoute: typeof LayoutProjectsProjectRouteWithChildren
}

const LayoutRouteChildren: LayoutRouteChildren = {
  LayoutIndexRoute: LayoutIndexRoute,
  LayoutAccountRoute: LayoutAccountRouteWithChildren,
  LayoutProjectsIndexRoute: LayoutProjectsIndexRoute,
  LayoutProjectsProjectRoute: LayoutProjectsProjectRouteWithChildren,
}

const LayoutRouteWithChildren =
  LayoutRoute._addFileChildren(LayoutRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof LayoutRouteWithChildren
  '/auth/email-verify': typeof AuthEmailVerifyRoute
  '/auth/github-verify': typeof AuthGithubVerifyRoute
  '/auth/google-verify': typeof AuthGoogleVerifyRoute
  '/auth/sign-in': typeof AuthSignInRoute
  '/': typeof LayoutIndexRoute
  '/account': typeof LayoutAccountLayoutRouteWithChildren
  '/projects': typeof LayoutProjectsIndexRoute
  '/account/billing': typeof LayoutAccountLayoutBillingRoute
  '/account/notifications': typeof LayoutAccountLayoutNotificationsRoute
  '/projects/$project': typeof LayoutProjectsProjectLayoutRouteWithChildren
  '/account/': typeof LayoutAccountLayoutIndexRoute
  '/projects/$project/ad-campaigns': typeof LayoutProjectsProjectLayoutAdCampaignsRoute
  '/projects/$project/analyze': typeof LayoutProjectsProjectLayoutAnalyzeRoute
  '/projects/$project/events': typeof LayoutProjectsProjectLayoutEventsRoute
  '/projects/$project/metrics': typeof LayoutProjectsProjectLayoutMetricsRoute
  '/projects/$project/team': typeof LayoutProjectsProjectLayoutTeamRoute
  '/projects/$project/users': typeof LayoutProjectsProjectLayoutUsersRoute
  '/projects/$project/': typeof LayoutProjectsProjectLayoutIndexRoute
  '/projects/$project/settings': typeof LayoutProjectsProjectLayoutSettingsLayoutRouteWithChildren
  '/projects/$project/settings/integrations': typeof LayoutProjectsProjectLayoutSettingsLayoutIntegrationsRoute
  '/projects/$project/settings/': typeof LayoutProjectsProjectLayoutSettingsLayoutIndexRoute
}

export interface FileRoutesByTo {
  '/auth/email-verify': typeof AuthEmailVerifyRoute
  '/auth/github-verify': typeof AuthGithubVerifyRoute
  '/auth/google-verify': typeof AuthGoogleVerifyRoute
  '/auth/sign-in': typeof AuthSignInRoute
  '/': typeof LayoutIndexRoute
  '/account': typeof LayoutAccountLayoutIndexRoute
  '/projects': typeof LayoutProjectsIndexRoute
  '/account/billing': typeof LayoutAccountLayoutBillingRoute
  '/account/notifications': typeof LayoutAccountLayoutNotificationsRoute
  '/projects/$project': typeof LayoutProjectsProjectLayoutIndexRoute
  '/projects/$project/ad-campaigns': typeof LayoutProjectsProjectLayoutAdCampaignsRoute
  '/projects/$project/analyze': typeof LayoutProjectsProjectLayoutAnalyzeRoute
  '/projects/$project/events': typeof LayoutProjectsProjectLayoutEventsRoute
  '/projects/$project/metrics': typeof LayoutProjectsProjectLayoutMetricsRoute
  '/projects/$project/team': typeof LayoutProjectsProjectLayoutTeamRoute
  '/projects/$project/users': typeof LayoutProjectsProjectLayoutUsersRoute
  '/projects/$project/settings': typeof LayoutProjectsProjectLayoutSettingsLayoutIndexRoute
  '/projects/$project/settings/integrations': typeof LayoutProjectsProjectLayoutSettingsLayoutIntegrationsRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_layout': typeof LayoutRouteWithChildren
  '/auth/email-verify': typeof AuthEmailVerifyRoute
  '/auth/github-verify': typeof AuthGithubVerifyRoute
  '/auth/google-verify': typeof AuthGoogleVerifyRoute
  '/auth/sign-in': typeof AuthSignInRoute
  '/_layout/': typeof LayoutIndexRoute
  '/_layout/account': typeof LayoutAccountRouteWithChildren
  '/_layout/account/_layout': typeof LayoutAccountLayoutRouteWithChildren
  '/_layout/projects/': typeof LayoutProjectsIndexRoute
  '/_layout/account/_layout/billing': typeof LayoutAccountLayoutBillingRoute
  '/_layout/account/_layout/notifications': typeof LayoutAccountLayoutNotificationsRoute
  '/_layout/projects/$project': typeof LayoutProjectsProjectRouteWithChildren
  '/_layout/projects/$project/_layout': typeof LayoutProjectsProjectLayoutRouteWithChildren
  '/_layout/account/_layout/': typeof LayoutAccountLayoutIndexRoute
  '/_layout/projects/$project/_layout/ad-campaigns': typeof LayoutProjectsProjectLayoutAdCampaignsRoute
  '/_layout/projects/$project/_layout/analyze': typeof LayoutProjectsProjectLayoutAnalyzeRoute
  '/_layout/projects/$project/_layout/events': typeof LayoutProjectsProjectLayoutEventsRoute
  '/_layout/projects/$project/_layout/metrics': typeof LayoutProjectsProjectLayoutMetricsRoute
  '/_layout/projects/$project/_layout/team': typeof LayoutProjectsProjectLayoutTeamRoute
  '/_layout/projects/$project/_layout/users': typeof LayoutProjectsProjectLayoutUsersRoute
  '/_layout/projects/$project/_layout/': typeof LayoutProjectsProjectLayoutIndexRoute
  '/_layout/projects/$project/_layout/settings': typeof LayoutProjectsProjectLayoutSettingsRouteWithChildren
  '/_layout/projects/$project/_layout/settings/_layout': typeof LayoutProjectsProjectLayoutSettingsLayoutRouteWithChildren
  '/_layout/projects/$project/_layout/settings/_layout/integrations': typeof LayoutProjectsProjectLayoutSettingsLayoutIntegrationsRoute
  '/_layout/projects/$project/_layout/settings/_layout/': typeof LayoutProjectsProjectLayoutSettingsLayoutIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/auth/email-verify'
    | '/auth/github-verify'
    | '/auth/google-verify'
    | '/auth/sign-in'
    | '/'
    | '/account'
    | '/projects'
    | '/account/billing'
    | '/account/notifications'
    | '/projects/$project'
    | '/account/'
    | '/projects/$project/ad-campaigns'
    | '/projects/$project/analyze'
    | '/projects/$project/events'
    | '/projects/$project/metrics'
    | '/projects/$project/team'
    | '/projects/$project/users'
    | '/projects/$project/'
    | '/projects/$project/settings'
    | '/projects/$project/settings/integrations'
    | '/projects/$project/settings/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/auth/email-verify'
    | '/auth/github-verify'
    | '/auth/google-verify'
    | '/auth/sign-in'
    | '/'
    | '/account'
    | '/projects'
    | '/account/billing'
    | '/account/notifications'
    | '/projects/$project'
    | '/projects/$project/ad-campaigns'
    | '/projects/$project/analyze'
    | '/projects/$project/events'
    | '/projects/$project/metrics'
    | '/projects/$project/team'
    | '/projects/$project/users'
    | '/projects/$project/settings'
    | '/projects/$project/settings/integrations'
  id:
    | '__root__'
    | '/_layout'
    | '/auth/email-verify'
    | '/auth/github-verify'
    | '/auth/google-verify'
    | '/auth/sign-in'
    | '/_layout/'
    | '/_layout/account'
    | '/_layout/account/_layout'
    | '/_layout/projects/'
    | '/_layout/account/_layout/billing'
    | '/_layout/account/_layout/notifications'
    | '/_layout/projects/$project'
    | '/_layout/projects/$project/_layout'
    | '/_layout/account/_layout/'
    | '/_layout/projects/$project/_layout/ad-campaigns'
    | '/_layout/projects/$project/_layout/analyze'
    | '/_layout/projects/$project/_layout/events'
    | '/_layout/projects/$project/_layout/metrics'
    | '/_layout/projects/$project/_layout/team'
    | '/_layout/projects/$project/_layout/users'
    | '/_layout/projects/$project/_layout/'
    | '/_layout/projects/$project/_layout/settings'
    | '/_layout/projects/$project/_layout/settings/_layout'
    | '/_layout/projects/$project/_layout/settings/_layout/integrations'
    | '/_layout/projects/$project/_layout/settings/_layout/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  LayoutRoute: typeof LayoutRouteWithChildren
  AuthEmailVerifyRoute: typeof AuthEmailVerifyRoute
  AuthGithubVerifyRoute: typeof AuthGithubVerifyRoute
  AuthGoogleVerifyRoute: typeof AuthGoogleVerifyRoute
  AuthSignInRoute: typeof AuthSignInRoute
}

const rootRouteChildren: RootRouteChildren = {
  LayoutRoute: LayoutRouteWithChildren,
  AuthEmailVerifyRoute: AuthEmailVerifyRoute,
  AuthGithubVerifyRoute: AuthGithubVerifyRoute,
  AuthGoogleVerifyRoute: AuthGoogleVerifyRoute,
  AuthSignInRoute: AuthSignInRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_layout",
        "/auth/email-verify",
        "/auth/github-verify",
        "/auth/google-verify",
        "/auth/sign-in"
      ]
    },
    "/_layout": {
      "filePath": "_layout.tsx",
      "children": [
        "/_layout/",
        "/_layout/account",
        "/_layout/projects/",
        "/_layout/projects/$project"
      ]
    },
    "/auth/email-verify": {
      "filePath": "auth/email-verify.tsx"
    },
    "/auth/github-verify": {
      "filePath": "auth/github-verify.tsx"
    },
    "/auth/google-verify": {
      "filePath": "auth/google-verify.tsx"
    },
    "/auth/sign-in": {
      "filePath": "auth/sign-in.tsx"
    },
    "/_layout/": {
      "filePath": "_layout/index.tsx",
      "parent": "/_layout"
    },
    "/_layout/account": {
      "filePath": "_layout/account",
      "parent": "/_layout",
      "children": [
        "/_layout/account/_layout"
      ]
    },
    "/_layout/account/_layout": {
      "filePath": "_layout/account/_layout.tsx",
      "parent": "/_layout/account",
      "children": [
        "/_layout/account/_layout/billing",
        "/_layout/account/_layout/notifications",
        "/_layout/account/_layout/"
      ]
    },
    "/_layout/projects/": {
      "filePath": "_layout/projects/index.tsx",
      "parent": "/_layout"
    },
    "/_layout/account/_layout/billing": {
      "filePath": "_layout/account/_layout/billing.tsx",
      "parent": "/_layout/account/_layout"
    },
    "/_layout/account/_layout/notifications": {
      "filePath": "_layout/account/_layout/notifications.tsx",
      "parent": "/_layout/account/_layout"
    },
    "/_layout/projects/$project": {
      "filePath": "_layout/projects/$project",
      "parent": "/_layout",
      "children": [
        "/_layout/projects/$project/_layout"
      ]
    },
    "/_layout/projects/$project/_layout": {
      "filePath": "_layout/projects/$project/_layout.tsx",
      "parent": "/_layout/projects/$project",
      "children": [
        "/_layout/projects/$project/_layout/ad-campaigns",
        "/_layout/projects/$project/_layout/analyze",
        "/_layout/projects/$project/_layout/events",
        "/_layout/projects/$project/_layout/metrics",
        "/_layout/projects/$project/_layout/team",
        "/_layout/projects/$project/_layout/users",
        "/_layout/projects/$project/_layout/",
        "/_layout/projects/$project/_layout/settings"
      ]
    },
    "/_layout/account/_layout/": {
      "filePath": "_layout/account/_layout/index.tsx",
      "parent": "/_layout/account/_layout"
    },
    "/_layout/projects/$project/_layout/ad-campaigns": {
      "filePath": "_layout/projects/$project/_layout/ad-campaigns.tsx",
      "parent": "/_layout/projects/$project/_layout"
    },
    "/_layout/projects/$project/_layout/analyze": {
      "filePath": "_layout/projects/$project/_layout/analyze.tsx",
      "parent": "/_layout/projects/$project/_layout"
    },
    "/_layout/projects/$project/_layout/events": {
      "filePath": "_layout/projects/$project/_layout/events.tsx",
      "parent": "/_layout/projects/$project/_layout"
    },
    "/_layout/projects/$project/_layout/metrics": {
      "filePath": "_layout/projects/$project/_layout/metrics.tsx",
      "parent": "/_layout/projects/$project/_layout"
    },
    "/_layout/projects/$project/_layout/team": {
      "filePath": "_layout/projects/$project/_layout/team.tsx",
      "parent": "/_layout/projects/$project/_layout"
    },
    "/_layout/projects/$project/_layout/users": {
      "filePath": "_layout/projects/$project/_layout/users.tsx",
      "parent": "/_layout/projects/$project/_layout"
    },
    "/_layout/projects/$project/_layout/": {
      "filePath": "_layout/projects/$project/_layout/index.tsx",
      "parent": "/_layout/projects/$project/_layout"
    },
    "/_layout/projects/$project/_layout/settings": {
      "filePath": "_layout/projects/$project/_layout/settings",
      "parent": "/_layout/projects/$project/_layout",
      "children": [
        "/_layout/projects/$project/_layout/settings/_layout"
      ]
    },
    "/_layout/projects/$project/_layout/settings/_layout": {
      "filePath": "_layout/projects/$project/_layout/settings/_layout.tsx",
      "parent": "/_layout/projects/$project/_layout/settings",
      "children": [
        "/_layout/projects/$project/_layout/settings/_layout/integrations",
        "/_layout/projects/$project/_layout/settings/_layout/"
      ]
    },
    "/_layout/projects/$project/_layout/settings/_layout/integrations": {
      "filePath": "_layout/projects/$project/_layout/settings/_layout/integrations.tsx",
      "parent": "/_layout/projects/$project/_layout/settings/_layout"
    },
    "/_layout/projects/$project/_layout/settings/_layout/": {
      "filePath": "_layout/projects/$project/_layout/settings/_layout/index.tsx",
      "parent": "/_layout/projects/$project/_layout/settings/_layout"
    }
  }
}
ROUTE_MANIFEST_END */
