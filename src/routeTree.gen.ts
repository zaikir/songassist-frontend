/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LayoutImport } from './routes/_layout'
import { Route as LayoutIndexImport } from './routes/_layout/index'
import { Route as AuthSignInImport } from './routes/auth/sign-in'
import { Route as AuthGoogleVerifyImport } from './routes/auth/google-verify'
import { Route as AuthGithubVerifyImport } from './routes/auth/github-verify'
import { Route as AuthEmailVerifyImport } from './routes/auth/email-verify'
import { Route as LayoutChatsIndexImport } from './routes/_layout/chats/index'
import { Route as LayoutAccountLayoutImport } from './routes/_layout/account/_layout'
import { Route as LayoutAccountLayoutIndexImport } from './routes/_layout/account/_layout/index'
import { Route as LayoutChatsChatLayoutImport } from './routes/_layout/chats/$chat/_layout'
import { Route as LayoutAccountLayoutNotificationsImport } from './routes/_layout/account/_layout/notifications'
import { Route as LayoutAccountLayoutBillingImport } from './routes/_layout/account/_layout/billing'
import { Route as LayoutChatsChatLayoutIndexImport } from './routes/_layout/chats/$chat/_layout/index'

// Create Virtual Routes

const LayoutAccountImport = createFileRoute('/_layout/account')()
const LayoutChatsChatImport = createFileRoute('/_layout/chats/$chat')()

// Create/Update Routes

const LayoutRoute = LayoutImport.update({
  id: '/_layout',
  getParentRoute: () => rootRoute,
} as any)

const LayoutAccountRoute = LayoutAccountImport.update({
  id: '/account',
  path: '/account',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutIndexRoute = LayoutIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LayoutRoute,
} as any)

const AuthSignInRoute = AuthSignInImport.update({
  id: '/auth/sign-in',
  path: '/auth/sign-in',
  getParentRoute: () => rootRoute,
} as any)

const AuthGoogleVerifyRoute = AuthGoogleVerifyImport.update({
  id: '/auth/google-verify',
  path: '/auth/google-verify',
  getParentRoute: () => rootRoute,
} as any)

const AuthGithubVerifyRoute = AuthGithubVerifyImport.update({
  id: '/auth/github-verify',
  path: '/auth/github-verify',
  getParentRoute: () => rootRoute,
} as any)

const AuthEmailVerifyRoute = AuthEmailVerifyImport.update({
  id: '/auth/email-verify',
  path: '/auth/email-verify',
  getParentRoute: () => rootRoute,
} as any)

const LayoutChatsChatRoute = LayoutChatsChatImport.update({
  id: '/chats/$chat',
  path: '/chats/$chat',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutChatsIndexRoute = LayoutChatsIndexImport.update({
  id: '/chats/',
  path: '/chats/',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutAccountLayoutRoute = LayoutAccountLayoutImport.update({
  id: '/_layout',
  getParentRoute: () => LayoutAccountRoute,
} as any)

const LayoutAccountLayoutIndexRoute = LayoutAccountLayoutIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LayoutAccountLayoutRoute,
} as any)

const LayoutChatsChatLayoutRoute = LayoutChatsChatLayoutImport.update({
  id: '/_layout',
  getParentRoute: () => LayoutChatsChatRoute,
} as any)

const LayoutAccountLayoutNotificationsRoute =
  LayoutAccountLayoutNotificationsImport.update({
    id: '/notifications',
    path: '/notifications',
    getParentRoute: () => LayoutAccountLayoutRoute,
  } as any)

const LayoutAccountLayoutBillingRoute = LayoutAccountLayoutBillingImport.update(
  {
    id: '/billing',
    path: '/billing',
    getParentRoute: () => LayoutAccountLayoutRoute,
  } as any,
)

const LayoutChatsChatLayoutIndexRoute = LayoutChatsChatLayoutIndexImport.update(
  {
    id: '/',
    path: '/',
    getParentRoute: () => LayoutChatsChatLayoutRoute,
  } as any,
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_layout': {
      id: '/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutImport
      parentRoute: typeof rootRoute
    }
    '/auth/email-verify': {
      id: '/auth/email-verify'
      path: '/auth/email-verify'
      fullPath: '/auth/email-verify'
      preLoaderRoute: typeof AuthEmailVerifyImport
      parentRoute: typeof rootRoute
    }
    '/auth/github-verify': {
      id: '/auth/github-verify'
      path: '/auth/github-verify'
      fullPath: '/auth/github-verify'
      preLoaderRoute: typeof AuthGithubVerifyImport
      parentRoute: typeof rootRoute
    }
    '/auth/google-verify': {
      id: '/auth/google-verify'
      path: '/auth/google-verify'
      fullPath: '/auth/google-verify'
      preLoaderRoute: typeof AuthGoogleVerifyImport
      parentRoute: typeof rootRoute
    }
    '/auth/sign-in': {
      id: '/auth/sign-in'
      path: '/auth/sign-in'
      fullPath: '/auth/sign-in'
      preLoaderRoute: typeof AuthSignInImport
      parentRoute: typeof rootRoute
    }
    '/_layout/': {
      id: '/_layout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof LayoutIndexImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/account': {
      id: '/_layout/account'
      path: '/account'
      fullPath: '/account'
      preLoaderRoute: typeof LayoutAccountImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/account/_layout': {
      id: '/_layout/account/_layout'
      path: '/account'
      fullPath: '/account'
      preLoaderRoute: typeof LayoutAccountLayoutImport
      parentRoute: typeof LayoutAccountRoute
    }
    '/_layout/chats/': {
      id: '/_layout/chats/'
      path: '/chats'
      fullPath: '/chats'
      preLoaderRoute: typeof LayoutChatsIndexImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/account/_layout/billing': {
      id: '/_layout/account/_layout/billing'
      path: '/billing'
      fullPath: '/account/billing'
      preLoaderRoute: typeof LayoutAccountLayoutBillingImport
      parentRoute: typeof LayoutAccountLayoutImport
    }
    '/_layout/account/_layout/notifications': {
      id: '/_layout/account/_layout/notifications'
      path: '/notifications'
      fullPath: '/account/notifications'
      preLoaderRoute: typeof LayoutAccountLayoutNotificationsImport
      parentRoute: typeof LayoutAccountLayoutImport
    }
    '/_layout/chats/$chat': {
      id: '/_layout/chats/$chat'
      path: '/chats/$chat'
      fullPath: '/chats/$chat'
      preLoaderRoute: typeof LayoutChatsChatImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/chats/$chat/_layout': {
      id: '/_layout/chats/$chat/_layout'
      path: '/chats/$chat'
      fullPath: '/chats/$chat'
      preLoaderRoute: typeof LayoutChatsChatLayoutImport
      parentRoute: typeof LayoutChatsChatRoute
    }
    '/_layout/account/_layout/': {
      id: '/_layout/account/_layout/'
      path: '/'
      fullPath: '/account/'
      preLoaderRoute: typeof LayoutAccountLayoutIndexImport
      parentRoute: typeof LayoutAccountLayoutImport
    }
    '/_layout/chats/$chat/_layout/': {
      id: '/_layout/chats/$chat/_layout/'
      path: '/'
      fullPath: '/chats/$chat/'
      preLoaderRoute: typeof LayoutChatsChatLayoutIndexImport
      parentRoute: typeof LayoutChatsChatLayoutImport
    }
  }
}

// Create and export the route tree

interface LayoutAccountLayoutRouteChildren {
  LayoutAccountLayoutBillingRoute: typeof LayoutAccountLayoutBillingRoute
  LayoutAccountLayoutNotificationsRoute: typeof LayoutAccountLayoutNotificationsRoute
  LayoutAccountLayoutIndexRoute: typeof LayoutAccountLayoutIndexRoute
}

const LayoutAccountLayoutRouteChildren: LayoutAccountLayoutRouteChildren = {
  LayoutAccountLayoutBillingRoute: LayoutAccountLayoutBillingRoute,
  LayoutAccountLayoutNotificationsRoute: LayoutAccountLayoutNotificationsRoute,
  LayoutAccountLayoutIndexRoute: LayoutAccountLayoutIndexRoute,
}

const LayoutAccountLayoutRouteWithChildren =
  LayoutAccountLayoutRoute._addFileChildren(LayoutAccountLayoutRouteChildren)

interface LayoutAccountRouteChildren {
  LayoutAccountLayoutRoute: typeof LayoutAccountLayoutRouteWithChildren
}

const LayoutAccountRouteChildren: LayoutAccountRouteChildren = {
  LayoutAccountLayoutRoute: LayoutAccountLayoutRouteWithChildren,
}

const LayoutAccountRouteWithChildren = LayoutAccountRoute._addFileChildren(
  LayoutAccountRouteChildren,
)

interface LayoutChatsChatLayoutRouteChildren {
  LayoutChatsChatLayoutIndexRoute: typeof LayoutChatsChatLayoutIndexRoute
}

const LayoutChatsChatLayoutRouteChildren: LayoutChatsChatLayoutRouteChildren = {
  LayoutChatsChatLayoutIndexRoute: LayoutChatsChatLayoutIndexRoute,
}

const LayoutChatsChatLayoutRouteWithChildren =
  LayoutChatsChatLayoutRoute._addFileChildren(
    LayoutChatsChatLayoutRouteChildren,
  )

interface LayoutChatsChatRouteChildren {
  LayoutChatsChatLayoutRoute: typeof LayoutChatsChatLayoutRouteWithChildren
}

const LayoutChatsChatRouteChildren: LayoutChatsChatRouteChildren = {
  LayoutChatsChatLayoutRoute: LayoutChatsChatLayoutRouteWithChildren,
}

const LayoutChatsChatRouteWithChildren = LayoutChatsChatRoute._addFileChildren(
  LayoutChatsChatRouteChildren,
)

interface LayoutRouteChildren {
  LayoutIndexRoute: typeof LayoutIndexRoute
  LayoutAccountRoute: typeof LayoutAccountRouteWithChildren
  LayoutChatsIndexRoute: typeof LayoutChatsIndexRoute
  LayoutChatsChatRoute: typeof LayoutChatsChatRouteWithChildren
}

const LayoutRouteChildren: LayoutRouteChildren = {
  LayoutIndexRoute: LayoutIndexRoute,
  LayoutAccountRoute: LayoutAccountRouteWithChildren,
  LayoutChatsIndexRoute: LayoutChatsIndexRoute,
  LayoutChatsChatRoute: LayoutChatsChatRouteWithChildren,
}

const LayoutRouteWithChildren =
  LayoutRoute._addFileChildren(LayoutRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof LayoutRouteWithChildren
  '/auth/email-verify': typeof AuthEmailVerifyRoute
  '/auth/github-verify': typeof AuthGithubVerifyRoute
  '/auth/google-verify': typeof AuthGoogleVerifyRoute
  '/auth/sign-in': typeof AuthSignInRoute
  '/': typeof LayoutIndexRoute
  '/account': typeof LayoutAccountLayoutRouteWithChildren
  '/chats': typeof LayoutChatsIndexRoute
  '/account/billing': typeof LayoutAccountLayoutBillingRoute
  '/account/notifications': typeof LayoutAccountLayoutNotificationsRoute
  '/chats/$chat': typeof LayoutChatsChatLayoutRouteWithChildren
  '/account/': typeof LayoutAccountLayoutIndexRoute
  '/chats/$chat/': typeof LayoutChatsChatLayoutIndexRoute
}

export interface FileRoutesByTo {
  '/auth/email-verify': typeof AuthEmailVerifyRoute
  '/auth/github-verify': typeof AuthGithubVerifyRoute
  '/auth/google-verify': typeof AuthGoogleVerifyRoute
  '/auth/sign-in': typeof AuthSignInRoute
  '/': typeof LayoutIndexRoute
  '/account': typeof LayoutAccountLayoutIndexRoute
  '/chats': typeof LayoutChatsIndexRoute
  '/account/billing': typeof LayoutAccountLayoutBillingRoute
  '/account/notifications': typeof LayoutAccountLayoutNotificationsRoute
  '/chats/$chat': typeof LayoutChatsChatLayoutIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_layout': typeof LayoutRouteWithChildren
  '/auth/email-verify': typeof AuthEmailVerifyRoute
  '/auth/github-verify': typeof AuthGithubVerifyRoute
  '/auth/google-verify': typeof AuthGoogleVerifyRoute
  '/auth/sign-in': typeof AuthSignInRoute
  '/_layout/': typeof LayoutIndexRoute
  '/_layout/account': typeof LayoutAccountRouteWithChildren
  '/_layout/account/_layout': typeof LayoutAccountLayoutRouteWithChildren
  '/_layout/chats/': typeof LayoutChatsIndexRoute
  '/_layout/account/_layout/billing': typeof LayoutAccountLayoutBillingRoute
  '/_layout/account/_layout/notifications': typeof LayoutAccountLayoutNotificationsRoute
  '/_layout/chats/$chat': typeof LayoutChatsChatRouteWithChildren
  '/_layout/chats/$chat/_layout': typeof LayoutChatsChatLayoutRouteWithChildren
  '/_layout/account/_layout/': typeof LayoutAccountLayoutIndexRoute
  '/_layout/chats/$chat/_layout/': typeof LayoutChatsChatLayoutIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/auth/email-verify'
    | '/auth/github-verify'
    | '/auth/google-verify'
    | '/auth/sign-in'
    | '/'
    | '/account'
    | '/chats'
    | '/account/billing'
    | '/account/notifications'
    | '/chats/$chat'
    | '/account/'
    | '/chats/$chat/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/auth/email-verify'
    | '/auth/github-verify'
    | '/auth/google-verify'
    | '/auth/sign-in'
    | '/'
    | '/account'
    | '/chats'
    | '/account/billing'
    | '/account/notifications'
    | '/chats/$chat'
  id:
    | '__root__'
    | '/_layout'
    | '/auth/email-verify'
    | '/auth/github-verify'
    | '/auth/google-verify'
    | '/auth/sign-in'
    | '/_layout/'
    | '/_layout/account'
    | '/_layout/account/_layout'
    | '/_layout/chats/'
    | '/_layout/account/_layout/billing'
    | '/_layout/account/_layout/notifications'
    | '/_layout/chats/$chat'
    | '/_layout/chats/$chat/_layout'
    | '/_layout/account/_layout/'
    | '/_layout/chats/$chat/_layout/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  LayoutRoute: typeof LayoutRouteWithChildren
  AuthEmailVerifyRoute: typeof AuthEmailVerifyRoute
  AuthGithubVerifyRoute: typeof AuthGithubVerifyRoute
  AuthGoogleVerifyRoute: typeof AuthGoogleVerifyRoute
  AuthSignInRoute: typeof AuthSignInRoute
}

const rootRouteChildren: RootRouteChildren = {
  LayoutRoute: LayoutRouteWithChildren,
  AuthEmailVerifyRoute: AuthEmailVerifyRoute,
  AuthGithubVerifyRoute: AuthGithubVerifyRoute,
  AuthGoogleVerifyRoute: AuthGoogleVerifyRoute,
  AuthSignInRoute: AuthSignInRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_layout",
        "/auth/email-verify",
        "/auth/github-verify",
        "/auth/google-verify",
        "/auth/sign-in"
      ]
    },
    "/_layout": {
      "filePath": "_layout.tsx",
      "children": [
        "/_layout/",
        "/_layout/account",
        "/_layout/chats/",
        "/_layout/chats/$chat"
      ]
    },
    "/auth/email-verify": {
      "filePath": "auth/email-verify.tsx"
    },
    "/auth/github-verify": {
      "filePath": "auth/github-verify.tsx"
    },
    "/auth/google-verify": {
      "filePath": "auth/google-verify.tsx"
    },
    "/auth/sign-in": {
      "filePath": "auth/sign-in.tsx"
    },
    "/_layout/": {
      "filePath": "_layout/index.tsx",
      "parent": "/_layout"
    },
    "/_layout/account": {
      "filePath": "_layout/account",
      "parent": "/_layout",
      "children": [
        "/_layout/account/_layout"
      ]
    },
    "/_layout/account/_layout": {
      "filePath": "_layout/account/_layout.tsx",
      "parent": "/_layout/account",
      "children": [
        "/_layout/account/_layout/billing",
        "/_layout/account/_layout/notifications",
        "/_layout/account/_layout/"
      ]
    },
    "/_layout/chats/": {
      "filePath": "_layout/chats/index.tsx",
      "parent": "/_layout"
    },
    "/_layout/account/_layout/billing": {
      "filePath": "_layout/account/_layout/billing.tsx",
      "parent": "/_layout/account/_layout"
    },
    "/_layout/account/_layout/notifications": {
      "filePath": "_layout/account/_layout/notifications.tsx",
      "parent": "/_layout/account/_layout"
    },
    "/_layout/chats/$chat": {
      "filePath": "_layout/chats/$chat",
      "parent": "/_layout",
      "children": [
        "/_layout/chats/$chat/_layout"
      ]
    },
    "/_layout/chats/$chat/_layout": {
      "filePath": "_layout/chats/$chat/_layout.tsx",
      "parent": "/_layout/chats/$chat",
      "children": [
        "/_layout/chats/$chat/_layout/"
      ]
    },
    "/_layout/account/_layout/": {
      "filePath": "_layout/account/_layout/index.tsx",
      "parent": "/_layout/account/_layout"
    },
    "/_layout/chats/$chat/_layout/": {
      "filePath": "_layout/chats/$chat/_layout/index.tsx",
      "parent": "/_layout/chats/$chat/_layout"
    }
  }
}
ROUTE_MANIFEST_END */
